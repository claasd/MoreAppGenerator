openapi: 3.0.1
info:
  version: v1
  title: Core API
  description: All MoreApp core API's
  contact: {}
servers:
  - url: https://api.moreapp.com
paths:
  /api/v2/customers/{customerId}/invites/{id}:
    put:
      tags:
        - Invites
      summary: Update invite
      description: Updates the specified invite.
      operationId: updateInvite
      parameters:
        - $ref: '#/components/parameters/customerId'
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestUserAccountInformation'
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/JsonError'
      security:
        - api-key: []
      servers:
        - url: https://api.moreapp.com
    delete:
      tags:
        - Invites
      summary: Revoke invite
      description: Revokes the specified invite.
      operationId: revokeInvite
      parameters:
        - $ref: '#/components/parameters/customerId'
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/JsonError'
      security:
        - api-key: []
      servers:
        - url: https://api.moreapp.com
  /api/v1.0/customers/{customerId}/submissions/resend/{submissionId}:
    put:
      tags:
        - Submissions
      summary: Resend a submission
      description: Resends the submission with the given ID.
      operationId: resendSubmission
      parameters:
        - $ref: '#/components/parameters/customerId'
        - $ref: '#/components/parameters/submissionId'
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/JsonError'
        '404':
          description: Not Found
      security:
        - api-key: []
      servers:
        - url: https://api.moreapp.com
  /api/v1.0/customers/{customerId}/datasources/{dataSourceId}:
    get:
      tags:
        - Datasources
      summary: Retrieve a datasource
      description: Retrieves the datasource with the given ID.
      operationId: getSingle
      parameters:
        - $ref: '#/components/parameters/customerId'
        - $ref: '#/components/parameters/dataSourceId'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestDataSource'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/JsonError'
        '404':
          description: Not Found
      security:
        - api-key: []
      servers:
        - url: https://api.moreapp.com
    put:
      tags:
        - Datasources
      summary: Update a datasource
      description: Updates the given datasource configuration.
      operationId: update
      parameters:
        - $ref: '#/components/parameters/customerId'
        - $ref: '#/components/parameters/dataSourceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestCreateDataSource'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestDataSource'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/JsonError'
        '404':
          description: Not Found
      security:
        - api-key: []
      servers:
        - url: https://api.moreapp.com
    delete:
      tags:
        - Datasources
      summary: Delete a datasource
      description: Deletes the given datasource.
      operationId: delete
      parameters:
        - $ref: '#/components/parameters/customerId'
        - $ref: '#/components/parameters/dataSourceId'
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/JsonError'
        '404':
          description: Not Found
      security:
        - api-key: []
      servers:
        - url: https://api.moreapp.com
  /api/v2/customers/{customerId}/roles:
    get:
      tags:
        - Roles
      summary: Get roles for account
      description: Gets all the available roles for this account.
      operationId: getRoles
      parameters:
        - $ref: '#/components/parameters/customerId'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Role'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/JsonError'
      security:
        - api-key: []
      servers:
        - url: https://api.moreapp.com
    post:
      tags:
        - Roles
      summary: Create role
      description: Create a role
      operationId: createRole
      parameters:
        - $ref: '#/components/parameters/customerId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRoleRequest'
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Role'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                      - SERVER_ERROR
                      - INVALID_REQUEST
                    description: The type of this error
                  code:
                    type: string
                    description: >-
                      A fixed string that can be used to handle this error
                      programmatically
                  message:
                    type: string
                    description: A human-readable description of this error
                  data:
                    type: object
                    description: All data related to this error
                    additionalProperties:
                      type: object
                      description: All data related to this error
                  traceId:
                    type: string
                    description: >-
                      An unique id for this API request, please include include
                      it on your ticket description when contacting MoreApp
                      support
      security:
        - api-key: []
      servers:
        - url: https://api.moreapp.com
  /api/v2/customers/{customerId}/invites:
    get:
      tags:
        - Invites
      summary: List all invites
      description: Returns a list of invites for the given customer.
      operationId: getInvites
      parameters:
        - $ref: '#/components/parameters/customerId'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestInvite'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/JsonError'
      security:
        - api-key: []
      servers:
        - url: https://api.moreapp.com
    post:
      tags:
        - Invites
      summary: Invite user
      description: Invites a user for the given customer.
      operationId: inviteUser
      parameters:
        - $ref: '#/components/parameters/customerId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestInviteUser'
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/JsonError'
      security:
        - api-key: []
      servers:
        - url: https://api.moreapp.com
  /api/v2/customers/{customerId}/invites/{inviteId}/groups/{groupId}:
    post:
      tags:
        - Invites
      summary: Add user to group
      description: >-
        Adds a user to a group. Nothing will change when the user already exists
        in the group.
      operationId: addGroup
      parameters:
        - $ref: '#/components/parameters/customerId'
        - $ref: '#/components/parameters/groupId'
        - $ref: '#/components/parameters/inviteId'
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                      - SERVER_ERROR
                      - INVALID_REQUEST
                    description: The type of this error
                  code:
                    type: string
                    description: >-
                      A fixed string that can be used to handle this error
                      programmatically
                  message:
                    type: string
                    description: A human-readable description of this error
                  data:
                    type: object
                    description: All data related to this error
                    additionalProperties:
                      type: object
                      description: All data related to this error
                  traceId:
                    type: string
                    description: >-
                      An unique id for this API request, please include include
                      it on your ticket description when contacting MoreApp
                      support
        '404':
          description: Not Found
      security:
        - api-key: []
      servers:
        - url: https://api.moreapp.com
    delete:
      tags:
        - Invites
      summary: Remove user from group
      description: >-
        Removes user from group, but the user will still be linked to your
        account.
      operationId: removeGroup
      parameters:
        - $ref: '#/components/parameters/customerId'
        - $ref: '#/components/parameters/groupId'
        - $ref: '#/components/parameters/inviteId'
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                      - SERVER_ERROR
                      - INVALID_REQUEST
                    description: The type of this error
                  code:
                    type: string
                    description: >-
                      A fixed string that can be used to handle this error
                      programmatically
                  message:
                    type: string
                    description: A human-readable description of this error
                  data:
                    type: object
                    description: All data related to this error
                    additionalProperties:
                      type: object
                      description: All data related to this error
                  traceId:
                    type: string
                    description: >-
                      An unique id for this API request, please include include
                      it on your ticket description when contacting MoreApp
                      support
        '404':
          description: Not Found
      security:
        - api-key: []
      servers:
        - url: https://api.moreapp.com
  /api/v2/customers/{customerId}/groups:
    get:
      tags:
        - Groups
      summary: List all groups
      description: Returns a list of all groups.
      operationId: getGroups
      parameters:
        - $ref: '#/components/parameters/customerId'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/JsonError'
      security:
        - api-key: []
      servers:
        - url: https://api.moreapp.com
    post:
      tags:
        - Groups
      summary: Create group
      description: Create a group
      operationId: createGroup
      parameters:
        - $ref: '#/components/parameters/customerId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGroupRequest'
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Group'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/JsonError'
      security:
        - api-key: []
      servers:
        - url: https://api.moreapp.com
  /api/v2/customers/{customerId}/groups/{groupId}/users/{userId}:
    post:
      tags:
        - Groups
      summary: Add user to group
      description: >-
        Adds a user to a group. Nothing will change when the user already exists
        in the group.
      operationId: addUser
      parameters:
        - $ref: '#/components/parameters/customerId'
        - $ref: '#/components/parameters/groupId'
        - $ref: '#/components/parameters/userId'
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                      - SERVER_ERROR
                      - INVALID_REQUEST
                    description: The type of this error
                  code:
                    type: string
                    description: >-
                      A fixed string that can be used to handle this error
                      programmatically
                  message:
                    type: string
                    description: A human-readable description of this error
                  data:
                    type: object
                    description: All data related to this error
                    additionalProperties:
                      type: object
                      description: All data related to this error
                  traceId:
                    type: string
                    description: >-
                      An unique id for this API request, please include include
                      it on your ticket description when contacting MoreApp
                      support
        '404':
          description: Not Found
      security:
        - api-key: []
      servers:
        - url: https://api.moreapp.com
    delete:
      tags:
        - Groups
      summary: Remove user from group
      description: >-
        Removes user from group, but the user will still be linked to your
        account.
      operationId: removeUser
      parameters:
        - $ref: '#/components/parameters/customerId'
        - $ref: '#/components/parameters/groupId'
        - $ref: '#/components/parameters/userId'
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                      - SERVER_ERROR
                      - INVALID_REQUEST
                    description: The type of this error
                  code:
                    type: string
                    description: >-
                      A fixed string that can be used to handle this error
                      programmatically
                  message:
                    type: string
                    description: A human-readable description of this error
                  data:
                    type: object
                    description: All data related to this error
                    additionalProperties:
                      type: object
                      description: All data related to this error
                  traceId:
                    type: string
                    description: >-
                      An unique id for this API request, please include include
                      it on your ticket description when contacting MoreApp
                      support
      security:
        - api-key: []
      servers:
        - url: https://api.moreapp.com
  /api/v1.0/customers/{customerId}/{formId}/tasks/{taskId}/revoke:
    post:
      tags:
        - Tasks
      summary: Revoke a task
      description: Revokes the specified task.
      operationId: revoke
      parameters:
        - $ref: '#/components/parameters/customerId'
        - $ref: '#/components/parameters/formId'
        - $ref: '#/components/parameters/taskId'
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/JsonError'
        '404':
          description: Not Found
      security:
        - api-key: []
      servers:
        - url: https://api.moreapp.com
  /api/v1.0/customers/{customerId}/{formId}/tasks/{taskId}/complete:
    post:
      tags:
        - Tasks
      summary: Complete a task
      description: Completes the specified task.
      operationId: complete
      parameters:
        - $ref: '#/components/parameters/customerId'
        - $ref: '#/components/parameters/formId'
        - $ref: '#/components/parameters/taskId'
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/JsonError'
        '404':
          description: Not Found
      security:
        - api-key: []
      servers:
        - url: https://api.moreapp.com
  /api/v1.0/customers/{customerId}/{formId}/tasks/filter/{page}:
    post:
      tags:
        - Tasks
      summary: List all tasks
      description: Returns a list of all tasks.
      operationId: filterTasks
      parameters:
        - $ref: '#/components/parameters/customerId'
        - $ref: '#/components/parameters/formId'
        - $ref: '#/components/parameters/page'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SimpleFilter'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestPageableTasks'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/JsonError'
      security:
        - api-key: []
      servers:
        - url: https://api.moreapp.com
  /api/v1.0/customers/{customerId}/{formId}/tasks:
    post:
      tags:
        - Tasks
      summary: Create a task
      description: Creates a new task.
      operationId: createTask
      parameters:
        - $ref: '#/components/parameters/customerId'
        - $ref: '#/components/parameters/formId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskCreateRequest'
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestTask'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/JsonError'
        '404':
          description: Not Found
      security:
        - api-key: []
      servers:
        - url: https://api.moreapp.com
  /api/v1.0/customers/{customerId}/forms/{formId}/submissions/filter/{page}:
    post:
      tags:
        - Submissions
      summary: List all submissions
      description: Returns a list of all submissions.
      operationId: filterSubmissionsWithSimpleFilter
      parameters:
        - $ref: '#/components/parameters/customerId'
        - $ref: '#/components/parameters/formId'
        - $ref: '#/components/parameters/page'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SimpleFilter'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestPageableRegistrations'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/JsonError'
        '404':
          description: Not Found
      security:
        - api-key: []
      servers:
        - url: https://api.moreapp.com
  /api/v1.0/customers/{customerId}/forms/{formId}/submissions/export:
    post:
      tags:
        - Submissions
      summary: Schedule an export
      description: >-
        Schedules an export for the given form. Returns an unique identifier for
        this export which can be used when listening for export events using
        webhooks.
      operationId: scheduleExport
      parameters:
        - $ref: '#/components/parameters/customerId'
        - $ref: '#/components/parameters/formId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportRequest'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExportScheduledResponse'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/JsonError'
      security:
        - api-key: []
      servers:
        - url: https://api.moreapp.com
  /api/v1.0/customers/{customerId}/datasources:
    get:
      tags:
        - Datasources
      summary: List all datasources
      description: Returns a list of your datasources.
      operationId: getAll
      parameters:
        - $ref: '#/components/parameters/customerId'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestDataSource'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/JsonError'
      security:
        - api-key: []
      servers:
        - url: https://api.moreapp.com
    post:
      tags:
        - Datasources
      summary: Create a datasource
      description: Creates a new datasource.
      operationId: create
      parameters:
        - $ref: '#/components/parameters/customerId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestCreateDataSource'
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/RestDataSource'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/JsonError'
      security:
        - api-key: []
      servers:
        - url: https://api.moreapp.com
  /api/v2/customers/{customerId}/users/{userId}/grants:
    get:
      tags:
        - Users
      summary: Get grants for user
      description: >-
        Gets all current grants for this specific user. Does not contain grants
        that are inherited from groups.
      operationId: getGrants
      parameters:
        - $ref: '#/components/parameters/customerId'
        - $ref: '#/components/parameters/userId'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Grant'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                      - SERVER_ERROR
                      - INVALID_REQUEST
                    description: The type of this error
                  code:
                    type: string
                    description: >-
                      A fixed string that can be used to handle this error
                      programmatically
                  message:
                    type: string
                    description: A human-readable description of this error
                  data:
                    type: object
                    description: All data related to this error
                    additionalProperties:
                      type: object
                      description: All data related to this error
                  traceId:
                    type: string
                    description: >-
                      An unique id for this API request, please include include
                      it on your ticket description when contacting MoreApp
                      support
      security:
        - api-key: []
      servers:
        - url: https://api.moreapp.com
    patch:
      tags:
        - Users
      summary: Add/update/remove grant
      description: Modifies the grants for specified user.
      operationId: patchGrant
      parameters:
        - $ref: '#/components/parameters/customerId'
        - $ref: '#/components/parameters/userId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestGrantChange'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Grant'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                      - SERVER_ERROR
                      - INVALID_REQUEST
                    description: The type of this error
                  code:
                    type: string
                    description: >-
                      A fixed string that can be used to handle this error
                      programmatically
                  message:
                    type: string
                    description: A human-readable description of this error
                  data:
                    type: object
                    description: All data related to this error
                    additionalProperties:
                      type: object
                      description: All data related to this error
                  traceId:
                    type: string
                    description: >-
                      An unique id for this API request, please include include
                      it on your ticket description when contacting MoreApp
                      support
        '404':
          description: Not Found
      security:
        - api-key: []
      servers:
        - url: https://api.moreapp.com
  /api/v2/customers/{customerId}/roles/{roleId}:
    get:
      tags:
        - Roles
      summary: Retrieve a role
      description: Retrieves the role with the given ID.
      operationId: getRole
      parameters:
        - $ref: '#/components/parameters/customerId'
        - $ref: '#/components/parameters/roleId'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Role'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                      - SERVER_ERROR
                      - INVALID_REQUEST
                    description: The type of this error
                  code:
                    type: string
                    description: >-
                      A fixed string that can be used to handle this error
                      programmatically
                  message:
                    type: string
                    description: A human-readable description of this error
                  data:
                    type: object
                    description: All data related to this error
                    additionalProperties:
                      type: object
                      description: All data related to this error
                  traceId:
                    type: string
                    description: >-
                      An unique id for this API request, please include include
                      it on your ticket description when contacting MoreApp
                      support
        '404':
          description: Not Found
      security:
        - api-key: []
      servers:
        - url: https://api.moreapp.com
    delete:
      tags:
        - Roles
      summary: Delete role
      description: >-
        Delete the given role. This operation will only work when no grants
        claiming this role exist.
      operationId: removeRole
      parameters:
        - $ref: '#/components/parameters/customerId'
        - $ref: '#/components/parameters/roleId'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Role'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                      - SERVER_ERROR
                      - INVALID_REQUEST
                    description: The type of this error
                  code:
                    type: string
                    description: >-
                      A fixed string that can be used to handle this error
                      programmatically
                  message:
                    type: string
                    description: A human-readable description of this error
                  data:
                    type: object
                    description: All data related to this error
                    additionalProperties:
                      type: object
                      description: All data related to this error
                  traceId:
                    type: string
                    description: >-
                      An unique id for this API request, please include include
                      it on your ticket description when contacting MoreApp
                      support
        '404':
          description: Not Found
      security:
        - api-key: []
      servers:
        - url: https://api.moreapp.com
    patch:
      tags:
        - Roles
      summary: Modify role
      description: Modify name or permissions for this role.
      operationId: patchRole
      parameters:
        - $ref: '#/components/parameters/customerId'
        - $ref: '#/components/parameters/roleId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Role'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                      - SERVER_ERROR
                      - INVALID_REQUEST
                    description: The type of this error
                  code:
                    type: string
                    description: >-
                      A fixed string that can be used to handle this error
                      programmatically
                  message:
                    type: string
                    description: A human-readable description of this error
                  data:
                    type: object
                    description: All data related to this error
                    additionalProperties:
                      type: object
                      description: All data related to this error
                  traceId:
                    type: string
                    description: >-
                      An unique id for this API request, please include include
                      it on your ticket description when contacting MoreApp
                      support
      security:
        - api-key: []
      servers:
        - url: https://api.moreapp.com
  /api/v2/customers/{customerId}/invites/{id}/grants:
    get:
      tags:
        - Invites
      summary: Get grants for invite
      description: >-
        Gets all current grants for this specific invite. Does not contain
        grants that are inherited from groups.
      operationId: getGrants_1
      parameters:
        - $ref: '#/components/parameters/customerId'
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Grant'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/JsonError'
        '404':
          description: Not Found
      security:
        - api-key: []
      servers:
        - url: https://api.moreapp.com
    patch:
      tags:
        - Invites
      summary: Add/update/remove grant
      description: Modifies the grants for specified invite.
      operationId: patchGrant_1
      parameters:
        - $ref: '#/components/parameters/customerId'
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestGrantChange'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Grant'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/JsonError'
        '404':
          description: Not Found
      security:
        - api-key: []
      servers:
        - url: https://api.moreapp.com
  /api/v2/customers/{customerId}/groups/{groupId}:
    get:
      tags:
        - Groups
      summary: Retrieve a group
      description: Retrieves the group with the given ID.
      operationId: getGroup
      parameters:
        - $ref: '#/components/parameters/customerId'
        - $ref: '#/components/parameters/groupId'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Group'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                      - SERVER_ERROR
                      - INVALID_REQUEST
                    description: The type of this error
                  code:
                    type: string
                    description: >-
                      A fixed string that can be used to handle this error
                      programmatically
                  message:
                    type: string
                    description: A human-readable description of this error
                  data:
                    type: object
                    description: All data related to this error
                    additionalProperties:
                      type: object
                      description: All data related to this error
                  traceId:
                    type: string
                    description: >-
                      An unique id for this API request, please include include
                      it on your ticket description when contacting MoreApp
                      support
        '404':
          description: Not Found
      security:
        - api-key: []
      servers:
        - url: https://api.moreapp.com
    delete:
      tags:
        - Groups
      summary: Delete group
      description: >-
        Deletes group, but not the users within the group. Those have to be
        deleted separately
      operationId: deleteGroup
      parameters:
        - $ref: '#/components/parameters/customerId'
        - $ref: '#/components/parameters/groupId'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Group'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                      - SERVER_ERROR
                      - INVALID_REQUEST
                    description: The type of this error
                  code:
                    type: string
                    description: >-
                      A fixed string that can be used to handle this error
                      programmatically
                  message:
                    type: string
                    description: A human-readable description of this error
                  data:
                    type: object
                    description: All data related to this error
                    additionalProperties:
                      type: object
                      description: All data related to this error
                  traceId:
                    type: string
                    description: >-
                      An unique id for this API request, please include include
                      it on your ticket description when contacting MoreApp
                      support
        '404':
          description: Not Found
      security:
        - api-key: []
      servers:
        - url: https://api.moreapp.com
    patch:
      tags:
        - Groups
      summary: Modify group
      description: Change name of group
      operationId: patchGroup
      parameters:
        - $ref: '#/components/parameters/customerId'
        - $ref: '#/components/parameters/groupId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Group'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                      - SERVER_ERROR
                      - INVALID_REQUEST
                    description: The type of this error
                  code:
                    type: string
                    description: >-
                      A fixed string that can be used to handle this error
                      programmatically
                  message:
                    type: string
                    description: A human-readable description of this error
                  data:
                    type: object
                    description: All data related to this error
                    additionalProperties:
                      type: object
                      description: All data related to this error
                  traceId:
                    type: string
                    description: >-
                      An unique id for this API request, please include include
                      it on your ticket description when contacting MoreApp
                      support
        '404':
          description: Not Found
      security:
        - api-key: []
      servers:
        - url: https://api.moreapp.com
  /api/v2/customers/{customerId}/groups/{groupId}/grants:
    patch:
      tags:
        - Groups
      summary: Add/remove grant
      description: Modifies the grants for specified group.
      operationId: patchGrant_2
      parameters:
        - $ref: '#/components/parameters/customerId'
        - $ref: '#/components/parameters/groupId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestGrantChange'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Grant'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                      - SERVER_ERROR
                      - INVALID_REQUEST
                    description: The type of this error
                  code:
                    type: string
                    description: >-
                      A fixed string that can be used to handle this error
                      programmatically
                  message:
                    type: string
                    description: A human-readable description of this error
                  data:
                    type: object
                    description: All data related to this error
                    additionalProperties:
                      type: object
                      description: All data related to this error
                  traceId:
                    type: string
                    description: >-
                      An unique id for this API request, please include include
                      it on your ticket description when contacting MoreApp
                      support
      security:
        - api-key: []
      servers:
        - url: https://api.moreapp.com
  /api/v2/customers/{customerId}/invites/{id}/resend:
    get:
      tags:
        - Invites
      summary: Resend invite
      description: Resends the user invite email.
      operationId: resendInvite
      parameters:
        - $ref: '#/components/parameters/customerId'
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/JsonError'
        '404':
          description: Not Found
      security:
        - api-key: []
      servers:
        - url: https://api.moreapp.com
  /api/v2/customers/{customerId}/groups/{groupId}/users:
    get:
      tags:
        - Groups
      summary: List users within group
      description: Returns a list of users in the given group.
      operationId: getGroupUsers
      parameters:
        - $ref: '#/components/parameters/customerId'
        - $ref: '#/components/parameters/groupId'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GroupUser'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                      - SERVER_ERROR
                      - INVALID_REQUEST
                    description: The type of this error
                  code:
                    type: string
                    description: >-
                      A fixed string that can be used to handle this error
                      programmatically
                  message:
                    type: string
                    description: A human-readable description of this error
                  data:
                    type: object
                    description: All data related to this error
                    additionalProperties:
                      type: object
                      description: All data related to this error
                  traceId:
                    type: string
                    description: >-
                      An unique id for this API request, please include include
                      it on your ticket description when contacting MoreApp
                      support
      security:
        - api-key: []
      servers:
        - url: https://api.moreapp.com
  /api/v1.0/customers/{customerId}/{formId}/tasks/{taskId}:
    get:
      tags:
        - Tasks
      summary: Retrieve a task
      description: Retrieves the task with the given ID.
      operationId: getTask
      parameters:
        - $ref: '#/components/parameters/customerId'
        - $ref: '#/components/parameters/formId'
        - $ref: '#/components/parameters/taskId'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestTask'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/JsonError'
        '404':
          description: Not Found
      security:
        - api-key: []
      servers:
        - url: https://api.moreapp.com
  /api/v1.0/customers/{customerId}:
    get:
      tags:
        - Customers
      summary: Retrieve a customer
      description: Retrieves the customer with the given ID.
      operationId: getCustomer
      parameters:
        - $ref: '#/components/parameters/customerId'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Customer'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/JsonError'
        '404':
          description: Not Found
      security:
        - api-key: []
      servers:
        - url: https://api.moreapp.com
  /api/v1.0/customers/{customerId}/users:
    get:
      tags:
        - Users
      summary: List all users
      description: Returns a list of all users.
      operationId: getUsers
      parameters:
        - $ref: '#/components/parameters/customerId'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/JsonError'
      security:
        - api-key: []
      servers:
        - url: https://api.moreapp.com
  /api/v1.0/customers/{customerId}/users/{userId}:
    get:
      tags:
        - Users
      summary: Retrieve a user
      description: Retrieves the user with the given ID.
      operationId: getUser
      parameters:
        - $ref: '#/components/parameters/customerId'
        - $ref: '#/components/parameters/userId'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/JsonError'
        '404':
          description: Not Found
      security:
        - api-key: []
      servers:
        - url: https://api.moreapp.com
    delete:
      tags:
        - Users
      summary: Remove a user
      description: Removes the user from the given customer.
      operationId: removeUser_1
      parameters:
        - $ref: '#/components/parameters/customerId'
        - $ref: '#/components/parameters/userId'
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/JsonError'
        '404':
          description: Not Found
      security:
        - api-key: []
      servers:
        - url: https://api.moreapp.com
  /api/v1.0/customers/{customerId}/submissions/{submissionId}:
    get:
      tags:
        - Submissions
      summary: Get a single submission
      description: Get the submission with the given ID.
      operationId: getSubmission
      parameters:
        - $ref: '#/components/parameters/customerId'
        - $ref: '#/components/parameters/submissionId'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestRegistration'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/JsonError'
        '404':
          description: Not Found
      security:
        - api-key: []
      servers:
        - url: https://api.moreapp.com
    delete:
      tags:
        - Submissions
      summary: Delete a submission
      description: Deletes the submission with the given ID.
      operationId: deleteRegistration
      parameters:
        - name: timestamp
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - $ref: '#/components/parameters/customerId'
        - $ref: '#/components/parameters/submissionId'
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/JsonError'
        '404':
          description: Not Found
      security:
        - api-key: []
      servers:
        - url: https://api.moreapp.com
  /api/v1.0/customers/{customerId}/registrationFile/{fileId}/download:
    get:
      tags:
        - Submissions
      summary: Download submission file
      description: Download a submission file by given ID.
      operationId: getFile
      parameters:
        - $ref: '#/components/parameters/customerId'
        - name: fileId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
                format: byte
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/JsonError'
        '404':
          description: Not Found
      security:
        - api-key: []
      servers:
        - url: https://api.moreapp.com
  /api/v1.0/customers/{customerId}/forms/{formId}/submissions/export/fields:
    get:
      tags:
        - Submissions
      summary: List all exportable fields
      description: >-
        Returns a list of all fields that can be exported for the given form.
        The result can be used for scheduling an export.
      operationId: exportFields
      parameters:
        - $ref: '#/components/parameters/customerId'
        - $ref: '#/components/parameters/formId'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExportField'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/JsonError'
      security:
        - api-key: []
      servers:
        - url: https://api.moreapp.com
tags:
  - name: Customers
  - name: Submissions
  - name: Invites
  - name: Datasources
  - name: Roles
  - name: Tasks
  - name: Groups
  - name: Users
externalDocs:
  url: https://docs.moreapp.com
  description: MoreApp Docs
components:
  parameters:
    customerId:
      name: customerId
      in: path
      description: >-
        Every customer has an unique numerical identifier, you can find it in
        the top left corner of the [platform](https://platform.moreapp.com/).
      required: true
      schema:
        type: number
        minimum: 0
    page:
      name: page
      in: path
      description: The page number when requesting paginated items.
      required: true
      schema:
        type: number
        minimum: 0
    userId:
      name: userId
      in: path
      description: Unique identifier for a user.
      required: true
      schema:
        type: string
        format: hexadecimal
        minLength: 24
        maxLength: 24
    inviteId:
      name: inviteId
      in: path
      description: Unique identifier for an invite.
      required: true
      schema:
        type: string
        format: hexadecimal
        minLength: 24
        maxLength: 24
    roleId:
      name: roleId
      in: path
      description: Unique identifier for a role.
      required: true
      schema:
        type: string
        format: hexadecimal
        minLength: 24
        maxLength: 24
    dataSourceId:
      name: dataSourceId
      in: path
      description: Unique identifier for a datasource.
      required: true
      schema:
        type: string
        format: hexadecimal
        minLength: 24
        maxLength: 24
    taskId:
      name: taskId
      in: path
      description: Unique identifier for a task.
      required: true
      schema:
        type: string
        format: hexadecimal
        minLength: 24
        maxLength: 24
    formId:
      name: formId
      in: path
      description: Unique identifier for a form.
      required: true
      schema:
        type: string
        format: hexadecimal
        minLength: 24
        maxLength: 24
    groupId:
      name: groupId
      in: path
      description: Unique identifier for a group.
      required: true
      schema:
        type: string
        format: hexadecimal
        minLength: 24
        maxLength: 24
    submissionId:
      name: submissionId
      in: path
      description: Unique identifier for a submission.
      required: true
      schema:
        type: string
        format: hexadecimal
        minLength: 24
        maxLength: 24
  securitySchemes:
    api-key:
      type: apiKey
      description: >-
        Check the [authentication
        documentation](https://moreapp.stoplight.io/docs/developer-docs/docs/Authentication.md)
        for more information.
      name: X-Api-Key
      in: header
  schemas:
    RestUserAccountInformation:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        language:
          type: string
          enum:
            - nl
            - en
            - es
            - de
            - pt
            - fr
            - ca
        country:
          type: string
        receiveNewsLetter:
          type: boolean
        timeZone:
          type: object
          properties:
            displayName:
              type: string
            id:
              type: string
            dstsavings:
              type: integer
              format: int32
            rawOffset:
              type: integer
              format: int32
      required:
        - language
        - receiveNewsLetter
    JsonError:
      type: object
      properties:
        status:
          type: integer
          format: int32
        message:
          type: string
        scope:
          type: string
          enum:
            - SECURITY
            - INVALID_REQUEST_DATA
            - VALIDATION
            - SERVER_ERROR
            - INVALID_REQUEST
        traceId:
          type: string
        details:
          $ref: '#/components/schemas/JsonErrorDetails'
    JsonErrorDetails:
      type: object
    RestDataSource:
      type: object
      properties:
        id:
          type: string
        customerId:
          type: integer
          format: int32
        name:
          type: string
        urlConfiguration:
          $ref: '#/components/schemas/RestUrlConfiguration'
        googleConfiguration:
          $ref: '#/components/schemas/GoogleConfiguration'
        updateStatus:
          type: string
          enum:
            - SUCCESS
            - NEVER
            - FAILURE
        lastUpdated:
          type: string
          format: date-time
        lastSuccessfulUpdate:
          type: string
          format: date-time
        lastUpdateType:
          type: string
          enum:
            - EXCEL
            - URL
            - GOOGLE_SPREADSHEET
        lastUpdateWarningMessages:
          type: array
          items:
            type: string
        columnMapping:
          type: array
          items:
            $ref: '#/components/schemas/DataKey'
        enabled:
          type: boolean
        failedExecutionCount:
          type: integer
          format: int32
        version:
          type: string
          format: uuid
      required:
        - name
    RestUrlConfiguration:
      type: object
      properties:
        url:
          type: string
        credentials:
          $ref: '#/components/schemas/RestCredentials'
        requestHeaders:
          type: object
          additionalProperties:
            type: string
        parameters:
          type: object
          additionalProperties:
            type: string
        updateInterval:
          type: string
          enum:
            - QUARTER_HOUR
            - HALF_HOUR
            - HOURLY
            - DAILY
            - WEEKLY
            - NEVER
      required:
        - url
        - updateInterval
    RestCredentials:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    GoogleConfiguration:
      type: object
      properties:
        spreadsheetId:
          type: string
        updateInterval:
          type: string
          enum:
            - QUARTER_HOUR
            - HALF_HOUR
            - HOURLY
            - DAILY
            - WEEKLY
            - NEVER
    DataKey:
      type: object
      properties:
        id:
          type: string
        label:
          type: string
    RestCreateDataSource:
      type: object
      properties:
        name:
          type: string
        urlConfiguration:
          $ref: '#/components/schemas/RestUrlConfiguration'
        googleConfiguration:
          $ref: '#/components/schemas/GoogleConfiguration'
      required:
        - name
    Role:
      type: object
      properties:
        name:
          type: string
        permissions:
          type: array
          items:
            type: string
            enum:
              - CREATE_SUBMISSION
              - READ_SUBMISSION
              - UPDATE_SUBMISSION
              - DELETE_SUBMISSION
              - READ_REGISTRATION
              - DELETE_REGISTRATION
              - READ_REGISTRATION_FILE
              - CREATE_TASK
              - READ_TASK
              - UPDATE_TASK
              - DELETE_TASK
              - CREATE_USER
              - READ_USER
              - UPDATE_USER
              - DELETE_USER
              - CREATE_FORM
              - UPDATE_FORM
              - ARCHIVE_FORM
              - RESTORE_FORM
              - ADD_FORM
              - REMOVE_FORM
              - READ_RESOURCE
              - CREATE_FOLDER
              - UPDATE_FOLDER
              - DELETE_FOLDER
              - READ_DATA_SOURCE
              - CREATE_DATA_SOURCE
              - UPDATE_DATA_SOURCE
              - DELETE_DATA_SOURCE
              - READ_WEBHOOK
              - CREATE_WEBHOOK
              - UPDATE_WEBHOOK
              - DELETE_WEBHOOK
              - CUSTOMER_USER
              - FORM_USER
              - FOLDER_USER
              - MANAGE_CREDITS
              - MANAGE_DATA_SOURCES
              - MANAGE_FORMS
              - MANAGE_TASKS
              - MANAGE_REGISTRATIONS
              - MANAGE_USERS
              - MANAGE_WEBHOOKS
              - MANAGE_SSO
              - MANAGE_SENDING_DOMAIN
              - MANAGE_TEMPLATES
    CreateRoleRequest:
      type: object
      properties:
        name:
          type: string
      example:
        name: Form manager
    RestInvite:
      type: object
      properties:
        id:
          type: string
        customerId:
          type: integer
          format: int32
        emailAddress:
          type: string
        grants:
          type: array
          items:
            $ref: '#/components/schemas/Grant'
        groups:
          type: array
          items:
            type: string
        settings:
          $ref: '#/components/schemas/UserAccountInformation'
        status:
          type: string
          enum:
            - NEW_USER
            - EXISTING_USER
            - PENDING
        expiresAt:
          type: string
          format: date-time
    Grant:
      type: object
      properties:
        customerId:
          $ref: '#/components/schemas/customerId'
        resourceType:
          type: string
          enum:
            - CUSTOMER
            - FORM
            - FOLDER
            - SYSTEM
            - NONE
        roleId:
          $ref: '#/components/schemas/objectId'
        resourceId:
          $ref: '#/components/schemas/objectId'
    customerId:
      type: number
      minimum: 0
    objectId:
      type: string
      format: hexadecimal
      minLength: 24
      maxLength: 24
    UserAccountInformation:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        language:
          type: string
          enum:
            - nl
            - en
            - es
            - de
            - pt
            - fr
            - ca
        country:
          type: string
        receiveNewsLetter:
          type: boolean
        timeZone:
          type: object
          properties:
            displayName:
              type: string
            id:
              type: string
            dstsavings:
              type: integer
              format: int32
            rawOffset:
              type: integer
              format: int32
    RestInviteUser:
      type: object
      properties:
        emailAddress:
          type: string
        language:
          type: string
          enum:
            - nl
            - en
            - es
            - de
            - pt
            - fr
            - ca
        groups:
          type: array
          items:
            $ref: '#/components/schemas/objectId'
        grants:
          type: array
          items:
            $ref: '#/components/schemas/Grant'
      example:
        emailAddress: johndoe@example.com
        language: nl
        groups:
          - 60b8b724022e103a9a9aa6d3
    Group:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/objectId'
        name:
          type: string
        grants:
          type: array
          items:
            $ref: '#/components/schemas/Grant'
      example:
        id: 60b8b724022e103a9a9aa6d3
        name: Delivery drivers
        grants: []
    CreateGroupRequest:
      type: object
      properties:
        name:
          type: string
      example:
        name: Delivery drivers
    SimpleFilter:
      type: object
      properties:
        pageSize:
          type: integer
          description: The amount of results per page
          format: int32
          minimum: 1
          maximum: 500
        sort:
          type: array
          description: Sort the results based on the given field
          items:
            $ref: '#/components/schemas/SortProperty'
        query:
          type: array
          description: Filter results based on the given predicate(s)
          items:
            $ref: '#/components/schemas/FilterQuery'
      example:
        pageSize: 10
        sort:
          - key: meta.registrationDate
            direction: -1
        query:
          - path: data.firstname
            value: John
            type: string
          - path: data.age
            value:
              match: gte
              value: 30
            type: number
    SortProperty:
      type: object
      description: Sort the results based on the given field
      properties:
        key:
          type: string
        direction:
          type: integer
          format: int32
          minimum: -1
          maximum: 1
      required:
        - key
        - direction
    FilterQuery:
      type: object
      properties:
        path:
          type: string
        value:
          type: object
        type:
          type: string
      required:
        - path
        - value
        - type
    RestPageableTasks:
      type: object
      properties:
        totalSize:
          type: integer
          format: int64
        elements:
          type: array
          items:
            $ref: '#/components/schemas/RestTask'
    RestTask:
      type: object
      properties:
        id:
          type: string
        customerId:
          type: integer
          format: int32
        formId:
          type: string
        formName:
          type: string
        description:
          type: string
        formIcon:
          type: string
        formIconColor:
          type: string
        users:
          type: array
          items:
            type: string
        message:
          type: string
        dates:
          $ref: '#/components/schemas/TaskDates'
        data:
          type: object
          additionalProperties:
            type: object
        status:
          type: string
          enum:
            - IN_PROGRESS
            - COMPLETED
            - REVOKED
            - DECLINED
        fulfilments:
          type: array
          items:
            $ref: '#/components/schemas/TaskFulfilment'
    TaskDates:
      type: object
      properties:
        creationDate:
          type: string
          format: date-time
        publishDate:
          type: string
          format: date-time
        informationDate:
          type: string
          format: date-time
    TaskFulfilment:
      type: object
      properties:
        userId:
          type: string
        date:
          type: string
          format: date-time
        formId:
          type: string
        registrationId:
          type: string
    TaskCreateRequest:
      type: object
      properties:
        recipients:
          type: array
          items:
            type: string
        message:
          type: string
        data:
          type: object
          additionalProperties:
            type: object
        informationDate:
          type: string
          format: date-time
        publishDate:
          $ref: '#/components/schemas/TaskPublishInfo'
        publishInfo:
          $ref: '#/components/schemas/TaskPublishInfo'
      required:
        - recipients
        - message
        - data
        - publishInfo
      example:
        recipients:
          - johndoe@example.com
        message: Please fill in this task before the end of the month
        data:
          fullName: John Doe
          anotherDataName: ...
          searchWidgetDataName:
            id: '005'
        informationDate: '2023-01-24T13:00:00Z'
        publishDate:
          type: IMMEDIATE
          value: 0
    TaskPublishInfo:
      type: object
      properties:
        type:
          type: string
          enum:
            - IMMEDIATE
            - RELATIVE
            - ABSOLUTE
        value:
          type: integer
          format: int64
          minimum: 0
      required:
        - type
    RestPageableRegistrations:
      type: object
      properties:
        totalSize:
          type: integer
          format: int64
        elements:
          type: array
          items:
            $ref: '#/components/schemas/RestRegistration'
        headers:
          type: array
          items:
            $ref: '#/components/schemas/WebRegistrationHeader'
    RestRegistration:
      type: object
      properties:
        id:
          type: string
        data:
          type: object
          additionalProperties:
            type: object
        info:
          $ref: '#/components/schemas/RestRegistrationInfo'
        meta:
          $ref: '#/components/schemas/RestRegistrationMeta'
        mailStatuses:
          type: array
          items:
            $ref: '#/components/schemas/RestRegistrationMailStatus'
    RestRegistrationInfo:
      type: object
      properties:
        date:
          type: string
          format: date-time
        userId:
          type: string
        partnerId:
          type: string
        customerId:
          type: integer
          format: int32
        customerName:
          type: string
        formVersionId:
          type: string
        formId:
          type: string
        formName:
          type: string
        paid:
          type: boolean
        copy:
          type: boolean
        price:
          type: number
          format: double
        credits:
          type: integer
          format: int32
        resends:
          type: integer
          format: int32
        applicationArtifactVersion:
          type: string
          description: Use 'formVersionId' instead
          x-deprecated: true
    RestRegistrationMeta:
      type: object
      properties:
        registrationDate:
          type: string
        guid:
          type: string
        instructionId:
          type: string
          x-deprecated: true
        taskId:
          type: string
        compatibilityLevel:
          type: string
        version:
          type: string
        serialNumber:
          type: integer
          format: int32
        hiddenFields:
          type: array
          items:
            type: string
        location:
          $ref: '#/components/schemas/RestRegistrationMetaLocation'
        device:
          $ref: '#/components/schemas/RestRegistrationMetaDevice'
    RestRegistrationMetaLocation:
      type: object
      properties:
        latitude:
          type: string
        longitude:
          type: string
    RestRegistrationMetaDevice:
      type: object
      properties:
        uuid:
          type: string
        name:
          type: string
        network:
          type: string
        userAgent:
          type: string
        appVersion:
          type: string
    RestRegistrationMailStatus:
      type: object
      properties:
        mailIds:
          type: array
          items:
            type: string
        pdfFileId:
          type: string
          nullable: true
        emailAddresses:
          type: array
          items:
            type: string
        status:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RestMailSendStatus'
        notificationId:
          type: string
        attempt:
          type: integer
          format: int32
    RestMailSendStatus:
      type: object
      properties:
        email:
          type: string
        transitions:
          type: array
          items:
            $ref: '#/components/schemas/RestMailTransition'
    RestMailTransition:
      type: object
      properties:
        date:
          type: string
          format: date-time
        status:
          type: string
        rejectReason:
          type: string
        bounceDescription:
          type: string
    WebRegistrationHeader:
      type: object
      properties:
        id:
          type: string
        label:
          type: string
    ExportRequest:
      type: object
      properties:
        exporterType:
          type: string
          enum:
            - EXCEL
        submissionIds:
          type: array
          items:
            $ref: '#/components/schemas/submissionId'
        exportFields:
          type: array
          items:
            $ref: '#/components/schemas/ExportField'
        mailOnFinish:
          type: array
          uniqueItems: true
          items:
            type: string
        options:
          $ref: '#/components/schemas/ExportOptions'
        filterQueries:
          type: array
          items:
            $ref: '#/components/schemas/FilterQuery'
      required:
        - exporterType
        - exportFields
        - mailOnFinish
        - options
    submissionId:
      type: string
      description: Unique identifier for a submission.
      format: hexadecimal
      minLength: 24
      maxLength: 24
    ExportField:
      type: object
      properties:
        name:
          type: string
        dataName:
          type: string
        exportFieldType:
          type: string
          enum:
            - BOOLEAN
            - STRING
            - DATE_TIME
            - NUMBER
            - FILE
            - LIST
            - MAP
            - REFERENCE
        fields:
          type: array
          items:
            $ref: '#/components/schemas/ExportField'
    ExportOptions:
      type: object
      properties:
        timezone:
          type: string
          description: >-
            A time-zone ID, such as 'Europe/Paris' or offset such as 'GMT+2' or
            'UTC+01:00'
          example: UTC+01:00
        includeFiles:
          type: boolean
        excelSingleSheet:
          type: boolean
        languageCode:
          type: string
          enum:
            - NL
            - EN
            - ES
            - DE
            - PT
            - RU
            - FR
            - IT
      required:
        - timezone
        - languageCode
    ExportScheduledResponse:
      type: object
      properties:
        id:
          type: string
    RestGrantChange:
      type: object
      properties:
        operation:
          type: string
          enum:
            - ADD
            - REMOVE
            - UPDATE
        roleId:
          $ref: '#/components/schemas/ObjectId'
        resourceId:
          type: string
        resourceType:
          type: string
          enum:
            - CUSTOMER
            - FORM
            - FOLDER
            - SYSTEM
            - NONE
      required:
        - operation
        - resourceId
        - resourceType
    ObjectId:
      $ref: '#/components/schemas/objectId'
    GroupUser:
      type: object
      properties:
        id:
          type: string
        username:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        externallyManaged:
          type: boolean
        disabled:
          type: boolean
    Customer:
      type: object
      properties:
        id:
          type: string
        customerId:
          type: integer
          format: int32
        name:
          type: string
        logoAssetId:
          type: string
        settings:
          $ref: '#/components/schemas/RestCustomerSettings'
        meta:
          $ref: '#/components/schemas/RestCustomerMeta'
    RestCustomerSettings:
      type: object
      properties:
        dateFormat:
          type: string
          enum:
            - DDMMYYYY
            - YYYYMMDD
            - MMDDYYYY
        segment:
          type: string
          enum:
            - OTHER
            - AUTOMOTIVE
            - CONSTRUCTION
            - FACILITY
            - FINANCIAL
            - TRADE_AND_INDUSTRY
            - GOVERNMENT
            - HEALTH_CARE
            - INSTALLATION
        otherSegment:
          type: string
        type:
          type: string
          x-deprecated: true
    RestCustomerMeta:
      type: object
    User:
      type: object
      properties:
        id:
          type: string
        username:
          type: string
        emailAddress:
          type: string
        settings:
          $ref: '#/components/schemas/RestUserSettings'
        emailValidated:
          type: boolean
        grants:
          type: array
          items:
            $ref: '#/components/schemas/Grant'
        groups:
          type: array
          items:
            type: string
    RestUserSettings:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        language:
          type: string
          enum:
            - nl
            - en
            - es
            - de
            - pt
            - fr
            - ca
        phoneNumber:
          type: string
        receiveNewsLetter:
          type: boolean
        finishedTour:
          type: boolean
        timeZone:
          type: object
          properties:
            displayName:
              type: string
            id:
              type: string
            dstsavings:
              type: integer
              format: int32
            rawOffset:
              type: integer
              format: int32
      required:
        - firstName
        - lastName
        - language
        - receiveNewsLetter
        - finishedTour
security:
  - api-key: []
